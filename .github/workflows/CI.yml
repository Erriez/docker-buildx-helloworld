name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:    
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Print versions
        run: |
          docker --version
          docker buildx version
  # build-all:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - setup
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Build images all targets
  #       shell: bash
  #       run: |
  #         echo "Building for ALL_PLATFORMS=${{ env.ALL_PLATFORMS }}"
  #         docker buildx create --use --name mybuild
  #         docker buildx bake -f build/build.hcl --set *.platform=${{ env.ALL_PLATFORMS }} #--progress plain
  build-local:
    runs-on: ubuntu-latest
    needs:
      - setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build images current targets
        shell: bash
        run: |
          docker buildx bake -f build/build.hcl --load
          docker images
  test:
    runs-on: ubuntu-latest
    needs:
      - build-local
    steps:
      - name: Test Hello World images
        shell: bash
        env:
          DOCKER_ORG: ${{ secrets.DOCKER_ORG }}
          IMAGE_VERSION: latest
        run: |
          echo "Running test job!"
          echo "Testing $DOCKER_ORG/hello:$IMAGE_VERSION"
          docker run -i --rm ${DOCKER_ORG}/hello:${IMAGE_VERSION}
  deploy:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Deploy Hello World images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "Todo deploy images to registry"
          echo "My username: $DOCKER_USERNAME"
          echo "My password: $DOCKER_PASSWORD"
